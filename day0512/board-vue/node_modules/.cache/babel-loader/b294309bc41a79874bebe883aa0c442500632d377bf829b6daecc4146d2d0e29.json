{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/util/http-common\";\nexport default {\n  name: \"BoardWrite\",\n  data() {\n    return {\n      userid: null,\n      subject: null,\n      content: null\n    };\n  },\n  methods: {\n    // 입력값 체크하기 - 체크가 성공하면 registArticle 호출\n    checkValue() {\n      // 사용자 입력값 체크하기\n      // 작성자아이디, 제목, 내용이 없을 경우 각 항목에 맞는 메세지를 출력\n      let err = true;\n      let msg = \"\";\n      !this.userid && (msg = \"작성자 입력해주세요\", err = false, this.$refs.userid.focus());\n      err && !this.subject && (msg = \"제목 입력해주세요\", err = false, this.$refs.subject.focus());\n      err && !this.content && (msg = \"내용 입력해주세요\", err = false, this.$refs.content.focus());\n      if (!err) alert(msg);\n      // 만약, 내용이 다 입력되어 있다면 registArticle 호출\n      else this.registArticle();\n    },\n    registArticle() {\n      // 비동기\n      // TODO : 글번호에 해당하는 글정보 등록.\n      let article = {\n        userid: this.userid,\n        subject: this.subject,\n        content: this.content\n      };\n      http.post(\"/board\", article).then(({\n        data\n      }) => {\n        let msg = \"실패\";\n        if (data === \"success\") {\n          msg = \"성공\";\n        }\n        alert(msg);\n      });\n    },\n    moveList() {\n      console.log(\"글목록 보러가자!!!\");\n      this.$router.push({\n        path: \"list\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["http","name","data","userid","subject","content","methods","checkValue","err","msg","$refs","focus","alert","registArticle","article","post","then","moveList","console","log","$router","push","path"],"sources":["src/components/board/BoardWrite.vue"],"sourcesContent":["<template>\r\n  <div class=\"regist\">\r\n    <h1 class=\"underline\">SSAFY 게시글 작성</h1>\r\n    <div class=\"regist_form\">\r\n      <label for=\"userid\">작성자</label>\r\n      <input type=\"text\" id=\"userid\" v-model=\"userid\" ref=\"userid\" /><br />\r\n      <label for=\"subject\">제목</label>\r\n      <input type=\"text\" id=\"subject\" v-model=\"subject\" ref=\"subject\" /><br />\r\n      <label for=\"content\">내용</label>\r\n      <br />\r\n      <textarea id=\"content\" v-model=\"content\" ref=\"content\" cols=\"35\" rows=\"5\"></textarea><br />\r\n      <button @click=\"checkValue\">등록</button>\r\n      <button @click=\"moveList\">목록</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"@/util/http-common\";\r\nexport default {\r\n  name: \"BoardWrite\",\r\n  data() {\r\n    return {\r\n      userid: null,\r\n      subject: null,\r\n      content: null,\r\n    };\r\n  },\r\n  methods: {\r\n    // 입력값 체크하기 - 체크가 성공하면 registArticle 호출\r\n    checkValue() {\r\n      // 사용자 입력값 체크하기\r\n      // 작성자아이디, 제목, 내용이 없을 경우 각 항목에 맞는 메세지를 출력\r\n      let err = true;\r\n      let msg = \"\";\r\n      !this.userid && ((msg = \"작성자 입력해주세요\"), (err = false), this.$refs.userid.focus());\r\n      err &&\r\n        !this.subject &&\r\n        ((msg = \"제목 입력해주세요\"), (err = false), this.$refs.subject.focus());\r\n      err &&\r\n        !this.content &&\r\n        ((msg = \"내용 입력해주세요\"), (err = false), this.$refs.content.focus());\r\n\r\n      if (!err) alert(msg);\r\n      // 만약, 내용이 다 입력되어 있다면 registArticle 호출\r\n      else this.registArticle();\r\n    },\r\n    registArticle() {\r\n      // 비동기\r\n      // TODO : 글번호에 해당하는 글정보 등록.\r\n      let article = {\r\n        userid: this.userid,\r\n        subject: this.subject,\r\n        content: this.content,\r\n      };\r\n\r\n      http.post(\"/board\", article).then(({ data }) => {\r\n        let msg = \"실패\";\r\n        if (data === \"success\") {\r\n          msg = \"성공\";\r\n        }\r\n        alert(msg);\r\n      });\r\n    },\r\n\r\n    moveList() {\r\n      console.log(\"글목록 보러가자!!!\");\r\n      this.$router.push({ path: \"list\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";AAkBA,OAAAA,IAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,WAAA;MACA;MACA;MACA,IAAAC,GAAA;MACA,IAAAC,GAAA;MACA,MAAAN,MAAA,KAAAM,GAAA,iBAAAD,GAAA,eAAAE,KAAA,CAAAP,MAAA,CAAAQ,KAAA;MACAH,GAAA,IACA,MAAAJ,OAAA,KACAK,GAAA,gBAAAD,GAAA,eAAAE,KAAA,CAAAN,OAAA,CAAAO,KAAA;MACAH,GAAA,IACA,MAAAH,OAAA,KACAI,GAAA,gBAAAD,GAAA,eAAAE,KAAA,CAAAL,OAAA,CAAAM,KAAA;MAEA,KAAAH,GAAA,EAAAI,KAAA,CAAAH,GAAA;MACA;MAAA,KACA,KAAAI,aAAA;IACA;IACAA,cAAA;MACA;MACA;MACA,IAAAC,OAAA;QACAX,MAAA,OAAAA,MAAA;QACAC,OAAA,OAAAA,OAAA;QACAC,OAAA,OAAAA;MACA;MAEAL,IAAA,CAAAe,IAAA,WAAAD,OAAA,EAAAE,IAAA;QAAAd;MAAA;QACA,IAAAO,GAAA;QACA,IAAAP,IAAA;UACAO,GAAA;QACA;QACAG,KAAA,CAAAH,GAAA;MACA;IACA;IAEAQ,SAAA;MACAC,OAAA,CAAAC,GAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}